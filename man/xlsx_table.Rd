% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/export_table_xlsx.R
\name{xlsx_table}
\alias{xlsx_table}
\title{Generate nice formated tables in excel.}
\usage{
xlsx_table(df, wb, sheet, tit.sep = NA, lin.inic = 1, col.inic = 1,
  width.first = 30, width.cols = 20)
}
\arguments{
\item{df}{The \emph{dataframe} to be exported.}

\item{wb}{A \emph{workbook} object (created by \code{\link[openxlsx]{createWorkbook}}), identifying where the table will be created.}

\item{sheet}{A \emph{intenger} identifying in which sheet index to create the table.}

\item{tit.sep}{[Optional] A \emph{regular expression} identifying how variable names and values are separated in
the dataframe title. For example, in "variable_category" the tit.sep parameter would be "_".
variables are crossed by (usually reagion). The target variables will match the population within each label of
the crossing variable. These variables should exist in both the sample and population dataframes.}

\item{lin.inic}{[Optional] A \emph{integer} identifying in which line to insert the table.}

\item{col.inic}{[Optional] A \emph{integer} identifying in which column to insert the table.}

\item{width.first}{[Optional] A \emph{integer} identifying the width of the first column in the table.}

\item{width.cols}{[Optional] A \emph{integer} identifying  the width of the other columns in the table.}
}
\value{
\emph{NULL}: the table is written to the provided workbook, no object is returned.
}
\description{
This function exports a dataframe to a formated table in excel. Format parameters are still hard-coded
in function. Cells of the table title will be merged if needed.
}
\examples{

### carregando dados
data(svy)

### formatando dados
df = svy
df$pop <- runif(nrow(df))
df <- df \%>\% gather(var,categ,ends_with('cota'))
df <- df \%>\% group_by(regiao,var,categ) \%>\% summarise(pop=sum(pop))
df <- df \%>\% unite(var,var,categ,sep = "#")
df1 <- df
df <- df \%>\% spread(var,pop)

### gerando tabelas
file <- "C:\\\\tabela_xlsx.xlsx"
wb <- createWorkbook()
addWorksheet(wb, "Exemplos")
# Tabela com 1 linha no tÃ­tulo
xlsx_table(df1,wb=wb,sheet=1,lin.inic = 1,col.inic = 1)
# Tabela com 2 linhas no tÃ­tulo
xlsx_table(df,wb=wb,sheet=1,tit.sep = "#",lin.inic = 1,col.inic = 5)
saveWorkbook(wb, file, overwrite = TRUE)
}
